# Helper macro to set basic variables of an INT test.
#
# This macro sets a couple of common variables of an INT test, which will
# be used in subfolders.
macro(setup_int_test_base)
    get_filename_component(CURRENT_TEST_NAME ${CMAKE_CURRENT_SOURCE_DIR} NAME)

    if(${WAVE3_VARIANT} STREQUAL "WAVE3.3_P")
    set(INSTALL_FOLDER "/${WAVE3.3_PRIMARY_PATH}")
    elseif(${WAVE3_VARIANT} STREQUAL "WAVE3.3_S")
    set(INSTALL_FOLDER "/${WAVE3.3_SECONDARY_PATH}")
    endif()

    #set(INSTALL_FOLDER "share/tests/${CURRENT_TEST_TYPE}/${CURRENT_TEST_NAME}")
    set(GEN_FOLDER "${CMAKE_CURRENT_BINARY_DIR}/_gen")

    list(APPEND LOG_ECUCFG_PATHS
          "${CMAKE_SOURCE_DIR}/cfg/ecucfg/LOG_nodeData.ecucfg")
endmacro()

# Helper function to add and install the generated files of an INT test.
#
# This function executes common code required for adding and installing an int test configuration.
# It expects the following variables to be set before getting called:
# - CURRENT_TEST_NAME: Name of the current int test
# - GEN_FOLDER: Build destination for generated files
# - INSTALL_FOLDER: Install destination for built executables and generated files
# - PROXIES: List of proxies, which will be generated by the VRTE FS CLI
# - SKELETONS: List of skeletons, which will be generated by the VRTE FS CLI
# - DSOMEIP_FILES_FS<x>: DSOMEIP files, which will be generated by the VRTE FS CLI
# - ARXML_FILES: ARXML input files to the VRTE FS CLI
function(setup_int_test_gen)

	#################################################   FINDING NEEDED PACKAGES BELOW  ##############################################################################################
### ARA::COM
find_package(com-communication-manager CONFIG REQUIRED)

### ARA::LOG
find_package(log-framework-if CONFIG REQUIRED)

### ARA::EXEC
find_package(exm-executionclient-lib CONFIG REQUIRED)
    ############################################
    # Add targets for generated files
    ############################################

    add_vrte_comapi_library(${CURRENT_TEST_NAME}_comapi
        PROXIES
            ${PROXIES}
        SKELETONS
            ${SKELETONS}
        ARXMLS
            ${ARXML_FILES}
        GEN_SRC
            ${GEN_FOLDER}
    )

    add_vrte_ecucfg_config(${CURRENT_TEST_NAME}_ecucfg
        ARXMLS
            ${ARXML_FILES}
        GEN_DIR
            ${GEN_FOLDER}
        OUTPUT_FILES
            COM_nodeData.ecucfg
    )

    if(DSOMEIP_FILES_FS1 OR DSOMEIP_FILES_FS2 OR DSOMEIP_FILES_FS3)
        add_vrte_dsomeip_config(${CURRENT_TEST_NAME}_dsomeip
            OUTPUT_FILES
	    	${DSOMEIP_FILES_FS1}
	    	${DSOMEIP_FILES_FS2}
	    	${DSOMEIP_FILES_FS3}
            ARXMLS
                ${ARXML_FILES}
            GEN_DIR
                ${GEN_FOLDER}
        )
    endif()


    ############################################
    # Install the generated files
    ############################################

    list(TRANSFORM ECUCFG_FILES
        PREPEND "${GEN_FOLDER}/"
        OUTPUT_VARIABLE ECUCFG_PATHS)

    install(
        FILES ${ECUCFG_PATHS}
        DESTINATION ${INSTALL_FOLDER}/opt/vrte/rb-com/etc/ecu-cfg/ar-20-11
        COMPONENT ${CURRENT_TEST_NAME}
        PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE)

    if(DSOMEIP_FILES_FS1)
	list(TRANSFORM DSOMEIP_FILES_FS1
            PREPEND "${GEN_FOLDER}/"
            OUTPUT_VARIABLE DSOMEIP_PATHS_FS1)
        install(
            FILES ${DSOMEIP_PATHS_FS1} RENAME FlexibleSafety_MD_someip.json
            DESTINATION ${INSTALL_FOLDER}/opt/vrte/rb-com/etc/
            COMPONENT ${CURRENT_TEST_NAME}
            PERMISSIONS OWNER_READ OWNER_WRITE)
	    #RENAME FlexibleSafety_MD_someip.json)
    endif()

    if(DSOMEIP_FILES_FS2)
        list(TRANSFORM DSOMEIP_FILES_FS2
            PREPEND "${GEN_FOLDER}/"
            OUTPUT_VARIABLE DSOMEIP_PATHS_FS2)
        install(
            FILES ${DSOMEIP_PATHS_FS2}
            DESTINATION ${INSTALL_FOLDER}/opt/app/etc/someip
            COMPONENT ${CURRENT_TEST_NAME}
            PERMISSIONS OWNER_READ OWNER_WRITE)
    endif()

    if(DSOMEIP_FILES_FS3)
        list(TRANSFORM DSOMEIP_FILES_FS3
            PREPEND "${GEN_FOLDER}/"
            OUTPUT_VARIABLE DSOMEIP_PATHS_FS3)
        install(
            FILES ${DSOMEIP_PATHS_FS3}
            DESTINATION ${INSTALL_FOLDER}/opt/app/etc/someip
            COMPONENT ${CURRENT_TEST_NAME}
            PERMISSIONS OWNER_READ OWNER_WRITE)
    endif()

endfunction()
